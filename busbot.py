import telebot
from bs4 import BeautifulSoup
import requests
from telebot import types
import threading
import time

# –í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = ''
bot = telebot.TeleBot(TOKEN)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –∞–≤—Ç–æ–±—É—Å–æ–≤ —Å —Å–∞–π—Ç–∞
def get_bus_numbers():
    url = 'https://kudikina.ru/perm/bus/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    bus_numbers = []
    for a in soup.find_all('a', class_='bus-item bus-icon'):
        title = a.get('title')  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ title
        bus_number = title.split(',')[0].split()[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞
        bus_numbers.append(bus_number)

    return bus_numbers


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
    –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∞–≤—Ç–æ–±—É—Å–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ü–µ—Ä–º–∏. üöå

    –ú–µ–Ω—è –∑–æ–≤—É—Ç –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –ë–æ—Ç, –∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–∏ –ø–æ–µ–∑–¥–∫–∏ –ø–æ –≥–æ—Ä–æ–¥—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏. –° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã —Å–º–æ–∂–µ—Ç–µ:

    üîπ –£–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤.

    –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤–∞–º –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. 

    ‚ò∫ –ü—É—Å—Ç—å –≤–∞—à–∏ –ø–æ–µ–∑–¥–∫–∏ –ø–æ –ü–µ—Ä–º–∏ –±—É–¥—É—Ç –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –∏ –±–µ–∑–∑–∞–±–æ—Ç–Ω—ã–º–∏! ‚ò∫
    """
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = types.InlineKeyboardMarkup()
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    btn_help = types.InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='/help')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup.add(btn_help)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_photo(message.chat.id, 'https://img.ttransport.ru/photo/21/94/219426.jpg', caption=welcome_text,
                   reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "/help":
        send_help(call.message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
    –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ:

    üîπ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º. –ë–æ—Ç –ø—Ä–∏—à–ª–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.

    üîπ /bus_numbers - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ –≤—Å–µ—Ö –∞–≤—Ç–æ–±—É—Å–æ–≤.

    üîπ /stops <–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞> <–±—É–∫–≤–∞ –º–∞—Ä—à—Ä—É—Ç–∞> - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∞–≤—Ç–æ–±—É—Å–∞ –∏ –±—É–∫–≤—ã –º–∞—Ä—à—Ä—É—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: /stops 49 A

    üîπ /schedule <–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞> <–Ω–æ–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–∫–∏> <–±—É–∫–≤–∞ –º–∞—Ä—à—Ä—É—Ç–∞> - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä: /schedule 49 2 A

    üîπ /help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.
    """
    bot.send_message(message.chat.id, help_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /bus_numbers
@bot.message_handler(commands=['bus_numbers'])
def send_nums(message):
    bus_numbers = get_bus_numbers()
    bot.reply_to(message, '–ù–æ–º–µ—Ä–∞ –∞–≤—Ç–æ–±—É—Å–æ–≤: ' + ', '.join(bus_numbers))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –∞–≤—Ç–æ–±—É—Å–∞
def get_bus_stops(bus_number, route_letter):
    url = f'https://kudikina.ru/perm/bus/{bus_number}/{route_letter}'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ HTML-–∫–æ–¥–∞
    direction = soup.find('a', href=f'/perm/bus/{bus_number}/{route_letter}').get_text(strip=True)
    bus_stops = []
    for div in soup.find_all('div', class_='bus-stop col-xs-12 col-sm-6 col-md-6'):
        bus_stop = div.get_text(strip=True)
        bus_stops.append(bus_stop)

    return direction, bus_stops


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stops
@bot.message_handler(commands=['stops'])
def send_stops(message):
    message_parts = message.text.split()
    if len(message_parts) < 3:
        bot.reply_to(message,
                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞ –∏ –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /stops. –ù–∞–ø—Ä–∏–º–µ—Ä: /stops 49 A')
        return

    bus_number = message_parts[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    test = get_bus_numbers()
    if bus_number not in test:
        bot.reply_to(message, '–î–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–±—É—Å–∞ –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ ')
        return
    route_letter = message_parts[2]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if route_letter == 'A' or route_letter == 'B':
        direction, bus_stops = get_bus_stops(bus_number, route_letter)
        bot.send_message(message.chat.id,
                         '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∞–≤—Ç–æ–±—É—Å–∞ ' + bus_number + ' –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ ' + route_letter + ': ' + direction)
        bot.send_message(message.chat.id, '–û—Å—Ç–∞–Ω–æ–≤–∫–∏: ' + ', '.join(bus_stops))
    else:
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞')
        return


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∞–≤—Ç–æ–±—É—Å–∞
def get_bus_schedule(bus_number, stop_number, route_letter):
    url = f'https://kudikina.ru/perm/bus/{bus_number}/{route_letter}'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    for row in soup.find_all('div', class_='row'):
        bus_stop_div = row.find('div', class_='bus-stop col-xs-12 col-sm-6 col-md-6')
        stop_times_div = row.find('div', class_='stop-times')

        if bus_stop_div is not None and stop_times_div is not None:
            bus_stop_name = bus_stop_div.get_text(strip=True)
            if bus_stop_name.startswith(
                    f'{stop_number}) '):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –Ω–æ–º–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
                schedule = []
                for span in stop_times_div.find_all('span', class_=['current showed', 'showed']):
                    time = span.get_text(strip=True)
                    schedule.append(time)
                return bus_stop_name, schedule  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ

    return None, None  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /schedule
@bot.message_handler(commands=['schedule'])
def send_schedule(message):
    message_parts = message.text.split()
    if len(message_parts) < 4:
        bot.reply_to(message,
                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞, –Ω–æ–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /schedule. –ù–∞–ø—Ä–∏–º–µ—Ä: /schedule 49 2 A')
        return

    bus_number = message_parts[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    test = get_bus_numbers()
    if bus_number not in test:
        bot.reply_to(message, '–î–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–±—É—Å–∞ –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏')
        return
    stop_number = message_parts[2]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    route_letter = message_parts[3]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if route_letter == 'A' or route_letter == 'B':
        bus_stop_name, schedule = get_bus_schedule(bus_number, stop_number,
                                                   route_letter)  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        if bus_stop_name is None:
            bot.reply_to(message, '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')
        else:
            bot.reply_to(message,
                         '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–∞ ' + bus_number + ' –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ ' + bus_stop_name + ' –ø–æ –º–∞—Ä—à—Ä—É—Ç—É ' + route_letter + ': ' + ', '.join(
                             schedule))
    else:
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –±—É–∫–≤—É –º–∞—Ä—à—Ä—É—Ç–∞')
        return


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
def stay_awake():
    while True:
        print("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")
        time.sleep(10 * 60)  # –ü–∞—É–∑–∞ –≤ 10 –º–∏–Ω—É—Ç


# –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
thread = threading.Thread(target=stay_awake)
thread.start()

bot.polling(none_stop=True)
